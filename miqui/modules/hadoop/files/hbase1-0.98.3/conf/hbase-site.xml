<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!-- HEADER: This file is managed by puppet. -->
<!-- HEADER: It cannot be managed manually, and it is definitely not recommended. -->
<!--
/**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
	
	<!-- Standalone installation
	 | This configuration is only for testing purpouses.
	 | It shouldn't be used on production.
	 |
	<property>
		<name>hbase.rootdir</name>
		<value>file:///data01/hbase/data/hbase</value>
	</property>
	<property>
		<name>hbase.zookeeper.property.dataDir</name>
		<value>/data01/hbase/data/zookeeper</value>
	</property>
	-->
	<!-- Distributed installation
	 | This is the minimal configuration for the cluster. With this configuration, HBase will start up
	 | an HBase Master process, a ZooKeeper server, and a RegionServer process
	 | running against the local filesystem (writing to /tmp/hbase-hdadmin/ directory).
	 |
	<property>
		<name>hbase.cluster.distributed</name>
		<value>true</value>
	</property>
	-->
	
	<!-- Distributed installation
	 | 
	 |-->
	<!-- tmp dir -->
	<property>
		<name>hbase.tmp.dir</name>
		<value>/data01/hbase/tmp/hbase-${user.name}</value>
	</property>
	
	<!-- HBase rootdir -->
	<property>
		<name>hbase.rootdir</name>
		<value>hdfs://master01.bigdata:9000/hbase</value>
	</property>
	
	<!-- Run HBase in distributed mode -->
	<property>
		<name>hbase.cluster.distributed</name>
		<value>true</value>
	</property>
	
	<!-- Zookeeper cluster's servers -->
	<property>
		<name>hbase.zookeeper.quorum</name>
		<value>worker02.bigdata</value>
	</property>
	
	<!-- Local storage directory -->
	<property>
		<name>hbase.local.dir</name>
		<value>/data01/hbase/tmp/hbase-${user.name}/local</value>
	</property>
	
	<!-- HBase Master web UI port -->
	<property>
		<name>hbase.master.info.port</name>
		<value>16010</value>
	</property>
	
	<!-- Time to live for HLog before is cleansed from .oldlogdir (ms): 10 minutes -->
	<property>
		<name>hbase.master.logcleaner.ttl</name>
		<value>600000</value>
	</property>
	
	<!-- HBase RegionServers web UI port -->
	<property>
		<name>hbase.regionserver.info.port</name>
		<value>16030</value>
	</property>
	
	<!-- Port used by ZK nodes to talk to each other, as defined in zoo.cfg -->
	<property>
		<name>hbase.zookeeper.peerport</name>
		<value>2888</value>
	</property>
	
	<!-- Port used by ZK nodes for leader election, as defined in zoo.cfg -->
	<property>
		<name>hbase.zookeeper.leaderport</name>
		<value>3888</value>
	</property>
	
	<!-- Use ZooKeeper's multi-update functionality for quicker completion of operations -->
	<property>
		<name>hbase.zookeeper.useMulti</name>
		<value>true</value>
	</property>
	
	<!-- HBase REST server port -->
	<property>
		<name>hbase.rest.port</name>
		<value>8080</value>
	</property>
	
	<!-- Use Thrift TFramedTransport on server side -->
	<property>
		<name>hbase.regionserver.thrift.framed</name>
		<value>true</value>
	</property>
	
	<!-- User name to filter as, on static web filters while rendering content (HDFS web UI) -->
	<property>
		<name>hbase.http.staticuser.user</name>
		<value>hdadmin</value>
	</property>
	
</configuration>
