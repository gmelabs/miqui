# Kickstart file for anaconda.

install
text
url --url=http://192.168.1.29/centos/6/x86_64/
lang en_US.UTF-8
keyboard es
## desde fuera de red corporativa
#network --gateway=192.168.1.29 --nameserver=8.8.8.8 --hostname=newnode
# desde red corporativa
network --gateway=192.168.1.29 --nameserver=10.130.5.6 --hostname=newnode
network --noipv6 --onboot=yes --device=eth0 --bootproto=dhcp
rootpw  --iscrypted $6$zObwgCblraa.ZDZG$1A75t2JOP.SZEKsRlBEDfdZfe1Wvh9IofW7RaiSIsserZmTYBoW26QEn7jiwzfB4yLeu2dWzy.Yofh8TGrMJk0
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc Europe/Madrid
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
repo --name="CentOS_CD" --baseurl=http://192.168.1.29/centos/6/x86_64/ --cost=100

###############################################################################
# PARTITIONS
###############################################################################
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
zerombr yes
clearpart --none
part /boot --fstype=ext3 --size=128
part swap --size 1024
part / --fstype=ext3 --size=4096 --grow

## This section does not work caused by network configuration
#%packages --excludedocs --ignoremissing
#@Base
#@Core
##emacs
##nmap
##rsync
##vim
##wget
#-java
#%end

###############################################################################
# POST-INSTALLATION SCRIPT
###############################################################################
%post
#!/usr/bin/env bash
# -----------------------------------------------------------------------------
# 1.- Apply network configuration, ensure sshd running, install Puppet and Git.
# 2.- Pull system configuration from Git, and apply it using Puppet agent.
# -----------------------------------------------------------------------------
export LOGFILE=/root/install-post.log
export PUPPETLABS=http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm
export SYSCONF_PATH=/root
export SYSCONF_DIR=puppet-config
export SYSCONF_REPO=https://github.com/gmelabs/miqui.git
export SYSCONF_NAME=miqui

DATE=`date +"%Y-%m-%d %H:%M:%S"`
echo "* START postinstall $DATE" > $LOGFILE

# -----------------------------------------------------------------------------
echo "Apply network config, ensure sshd running and update SO" >> $LOGFILE
# -----------------------------------------------------------------------------
service network restart >> $LOGFILE 2>&1
service sshd start      >> $LOGFILE 2>&1
chkconfig sshd on       >> $LOGFILE 2>&1
yum update -y           >> $LOGFILE 2>&1
# -----------------------------------------------------------------------------
echo "Install Puppet and Git" >> $LOGFILE
# -----------------------------------------------------------------------------
rpm -ivh $PUPPETLABS    >> $LOGFILE 2>&1
yum install puppet -y   >> $LOGFILE 2>&1
yum install git -y      >> $LOGFILE 2>&1

# -----------------------------------------------------------------------------
echo "Pull system configuration from Git and apply it with Puppet" >> $LOGFILE
# -----------------------------------------------------------------------------
DATE=`date +"%Y-%m-%d %H:%M:%S"`
echo "$DATE Synchronize system configuration"         >> $LOGFILE 2>&1
rm -fr ${SYSCONF_PATH}/${SYSCONF_DIR}                 >> $LOGFILE 2>&1
cd ${SYSCONF_PATH}                                    >> $LOGFILE 2>&1
git clone ${SYSCONF_REPO} ${SYSCONF_DIR}              >> $LOGFILE 2>&1
cd ${SYSCONF_PATH}/${SYSCONF_DIR}/${SYSCONF_NAME}     >> $LOGFILE 2>&1
puppet apply --modulepath modules manifests/site.pp   >> $LOGFILE 2>&1
echo "System configuration synchronization finished!" >> $LOGFILE 2>&1
echo "----------------------------------------------" >> $LOGFILE 2>&1

# -----------------------------------------------------------------------------
echo "* FINISHED postinstall. Waiting for reboot" >> $LOGFILE

## ------------------------------------------------------------------------------
## Esto lo vi en un fichero por ahi. La mayoria ira en puppet pero ver que partes
## son necesarias
## Create Hadoop user hduser with password hduser.
# useradd -m -p hduser hduser						<-- \
## Create group Hadoop.									 |
# groupadd hadoop									<--  > Puppet
## Change user hduser's current group to hadoop.		 |
# usermod -g hadoop hduser							<-- /
## Tell the nodes hostname and ip address of the admin machine.
# echo "192.168.1.29 hadoop.admin" >> /etc/hosts	<-- puppet
## Configure administrative privilege to hadoop group.
# 
## Configure the kernel settings.
# ulimit -ulimit									<-- \_/ ESPECIAL ATENCION A ESTO
# ulimit -u											<-- / \ lo he visto de las dos formas
##########################
## Startup services.
##########################
# service sshd start								<-- estaba en una version y en otra no
# chkconfig sshd on									<-- esto lo dejÃ© aunque puppet tb lo tiene
## ------------------------------------------------------------------------------

%end
###############################################################################

reboot
firstboot --disable
